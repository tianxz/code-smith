<?xml version="1.0" encoding="UTF-8" ?>
<!--________________________________________________________________________________
 |                                                                                 |
 |  __/\\\\\\\\\\\________/\\\\\\\\\_____/\\\\\\\\\\\_______/\\\\\\\\\\\___        |
 |   _\/////\\\///______/\\\////////____/\\\/////////\\\___/\\\/////////\\\_       |
 |    _____\/\\\_______/\\\/____________\//\\\______\///___\//\\\______\///__      |
 |     _____\/\\\______/\\\_______________\////\\\___________\////\\\_________     |
 |      _____\/\\\_____\/\\\__________________\////\\\___________\////\\\______    |
 |       _____\/\\\_____\//\\\____________________\////\\\___________\////\\\___   |
 |        _____\/\\\______\///\\\___________/\\\______\//\\\___/\\\______\//\\\__  |
 |         __/\\\\\\\\\\\____\////\\\\\\\\\_\///\\\\\\\\\\\/___\///\\\\\\\\\\\/___ |
 ___________________________________________________________________________________
 |  此代码自动生成，请不要在此文件上做任何修改。如需扩展，请使用组合或继承方式实现。
 |  此代码自动生成，请不要在此文件上做任何修改。如需扩展，请使用组合或继承方式实现。
 |  此代码自动生成，请不要在此文件上做任何修改。如需扩展，请使用组合或继承方式实现。
 ________________________________________________________________________________-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.vinci.codesmith.test.dao.UserInfoDao">

    <sql id="columnNames">
        `ID`, `FIRST_NAME`, `LAST_NAME`, `LOGIN_NAME`, `LOGIN_PASSWORD`, `GENDER`, `EMAIL`, `NATIONAL_IDENTIFIER`, `CELL_PHONE`, `PEOPLE_TYPE`, `LAST_LOGIN_TIME`, `LAST_LOGIN_IP`
    </sql>

    <sql id="limit">
        <if test="limit != null">
            LIMIT #{limit.size} OFFSET #{limit.offset}
        </if>
    </sql>

    <sql id="total">
        COUNT(*)
    </sql>

    <sql id="where">
        <if test="queryDepicts != null">
            <where>
                <foreach collection="queryDepicts" item="sqlQuery">
                    <if test="sqlQuery.operator.toString() == 'EQ'">
                        <if test="sqlQuery.value == null">
                            AND ${sqlQuery.columnName} IS NULL
                        </if>
                        <if test="sqlQuery.value != null">
                            AND ${sqlQuery.columnName} = #{sqlQuery.value}
                        </if>
                    </if>
                    <if test="sqlQuery.operator.toString() == 'NEQ'">
                        <if test="sqlQuery.value == null">
                            AND ${sqlQuery.columnName} IS NOT NULL
                        </if>
                        <if test="sqlQuery.value != null">
                            AND ${sqlQuery.columnName} &lt;&gt; #{sqlQuery.value}
                        </if>
                    </if>
                    <if test="sqlQuery.operator.toString() == 'IN'">
                        AND ${sqlQuery.columnName} IN
                        <foreach collection="sqlQuery.multiValue" item="value" open="(" close=")" separator=",">
                        #{value}
                        </foreach>
                    </if>
                    <if test="sqlQuery.operator.toString() == 'LIKE'">
                        <bind name="_param1" value="'%' + sqlQuery.value + '%'"/>
                        AND ${sqlQuery.columnName} LIKE #{_param1}
                    </if>
                    <if test="sqlQuery.operator.toString() == 'AND'">
                        AND (${sqlQuery.columnName} &amp; #{sqlQuery.value} = #{sqlQuery.value})
                    </if>
                    <if test="sqlQuery.operator.toString() == 'BETWEEN'">
                        <!--X >= value and X <= value-->
                        <foreach collection="sqlQuery.multiValue" item="value" index="index">
                            <if test="index == 0">
                                AND ${sqlQuery.columnName} &gt;= #{value}
                            </if>
                            <if test="index == 1">
                                AND ${sqlQuery.columnName} &lt;= #{value}
                            </if>
                        </foreach>
                    </if>
                </foreach>
            </where>
        </if>
    </sql>

    <!-- 查询用户信息表总行数 -->
    <select id="queryTotal" resultType="long">
        SELECT
        <include refid="total"/>
        FROM `USER_INFO`
        <include refid="where"/>
    </select>

    <!-- 根据 id 查询 用户信息表 -->
    <select id="queryById" parameterType="long" resultType="org.vinci.codesmith.test.domain.UserInfo">
        SELECT <include refid="columnNames"/>
        FROM `USER_INFO`
        <where>
            id = #{id}
        </where>
    </select>

    <!-- 使用分页查询所有 用户信息表 -->
    <select id="queryAll" resultType="org.vinci.codesmith.test.domain.UserInfo">
        SELECT <include refid="columnNames"/>
        FROM `USER_INFO`
        <include refid="limit"/>
    </select>

    <!-- 动态查询 用户信息表 -->
    <select id="query" resultType="org.vinci.codesmith.test.domain.UserInfo">
        SELECT
        <include refid="columnNames"/>
        FROM `USER_INFO`
        <include refid="where"/>
        <include refid="limit"/>
    </select>

	<!-- 动态查询单个 用户信息表 -->
    <select id="querySingle" resultType="org.vinci.codesmith.test.domain.UserInfo">
        SELECT
        <include refid="columnNames"/>
        FROM `USER_INFO`
        <include refid="where"/>
    </select>

    <!-- 新增 用户信息表 -->
    <insert id="insertUserInfo" parameterType="org.vinci.codesmith.test.domain.UserInfo">
        INSERT INTO `USER_INFO`(<include refid="columnNames"/>)
        VALUES(#{id}, #{firstName}, #{lastName}, #{loginName}, #{loginPassword}, #{gender}, #{email}, #{nationalIdentifier}, #{cellPhone}, #{peopleType}, #{lastLoginTime}, #{lastLoginIp})
    </insert>

    <!-- 根据 id 修改 用户信息表 -->
    <update id="updateUserInfo">
        UPDATE `USER_INFO`
        SET
        <foreach collection="updateDepicts" separator="," item="item">
            <bind name="_param1" value="item.columnName" />
            <if test="item.isInclude">
                ${_param1} = #{item.value}
            </if>
        </foreach>
        <where>
            id = #{id}
        </where>
    </update>

    <!-- 根据 id 删除 用户信息表 -->
    <delete id="deleteUserInfo" parameterType="long">
        DELETE FROM `USER_INFO`
        <where>
            id = #{id}
        </where>
    </delete>
</mapper>